From 792538b9c89e94b39a59e966ca870cb324c54f95 Mon Sep 17 00:00:00 2001
From: Tobias Jungel <tobias.jungel@gmail.com>
Date: Fri, 1 Nov 2024 16:29:37 +0100
Subject: [PATCH 1/3] Detect selinux support and label files as needed

---
 internal/distro/distro.go | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/internal/distro/distro.go b/internal/distro/distro.go
index 4879f805..e00e5870 100644
--- a/internal/distro/distro.go
+++ b/internal/distro/distro.go
@@ -16,6 +16,7 @@ package distro
 
 import (
 	"fmt"
+	"github.com/opencontainers/selinux/go-selinux"
 	"os"
 )
 
@@ -68,7 +69,7 @@ var (
 	kargsCmd = "ignition-kargs-helper"
 
 	// Flags
-	selinuxRelabel  = "true"
+	selinuxEnabled  *bool
 	blackboxTesting = "false"
 	// writeAuthorizedKeysFragment indicates whether to write SSH keys
 	// specified in the Ignition config as a fragment to
@@ -123,7 +124,7 @@ func LuksRealRootKeyFilePath() string   { return luksRealRootKeyFilePath }
 func ResultFilePath() string            { return resultFilePath }
 func LuksRealVolumeKeyFilePath() string { return luksCexSecureKeyRepo }
 
-func SelinuxRelabel() bool  { return bakedStringToBool(selinuxRelabel) && !BlackboxTesting() }
+func SelinuxRelabel() bool  { return selinuxRelabelNeed() && !BlackboxTesting() }
 func BlackboxTesting() bool { return bakedStringToBool(blackboxTesting) }
 func WriteAuthorizedKeysFragment() bool {
 	return bakedStringToBool(fromEnv("WRITE_AUTHORIZED_KEYS_FRAGMENT", writeAuthorizedKeysFragment))
@@ -148,3 +149,11 @@ func bakedStringToBool(s string) bool {
 		panic(fmt.Sprintf("value '%s' cannot be interpreted as a boolean", s))
 	}
 }
+
+func selinuxRelabelNeed() bool {
+	if selinuxEnabled == nil {
+		selinuxEnabled = new(bool)
+		*selinuxEnabled = selinux.GetEnabled()
+	}
+	return *selinuxEnabled
+}
-- 
2.47.0

